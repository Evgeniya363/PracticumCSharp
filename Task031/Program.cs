// Задача 31: Задайте массив из 12 элементов, заполненный случайными числами 
//из промежутка [-9, 9]. Найдите сумму отрицательных и положительных элементов массива.
// Например, в массиве [3,9,-8,1,0,-7,2,-1,8,-3,-1,6] сумма положительных чисел равна 29,
// сумма отрицательных равна -20.

// Определяем одномерный массив целыых чисел arr 
// и инициализируем его  пользовательским методом InitArray (сам метод ниже),
// в который передаем начальное и конечное значение диапазона: -9 и 10. 
//управление программы передается  в метод InitArray, который отработав возвращает массив,
// его значения присваивается массиву arr
int[] arr = InitArray(-9, 10);

// Выводим в консоль массив arr пользовательским методом PrintArray (сам метод ниже),
// в который передаем массив arr. Управление передается в метод PrintArray, который,
// отработав, ничего не возвращает
PrintArray(arr);

// Выводим на экран Суммы: результат, возвращаемый методом Summ (сам метод ниже),
// в который передаем параметры: -1 для расчета суммы отрицательных элементов
// (+1 для положительных), и сам массив. Управление передается в метод Summ, который,
// отработав, возвращает целое значение, мы его выводим в консоль. и так 2 раза)))
Console.WriteLine($"\nСумма отрицательных: {Summ(-1, arr)}");
Console.WriteLine($"Сумма положительных: {Summ(1, arr)}");


// Далее собственно методы
// Пользовательский метод InitArray принимает 2 параметра типа int
// для нижней границы диапозона left и right - соотв. для верхней 
int[] InitArray(int left, int right)
{
  // Запрашиваем у пользователя количество элементов массива
  Console.Write("Введите количество элементов: ");
  int n = Convert.ToInt32(Console.ReadLine());

  // Определяем массив целых чисел, вернее  с помощью операции new (его еще называют конструктором)
  // создаем массив из n целых чисел. Он изначально будет заполнен(инициализирован) нулями
  // то есть если после этой строчки выполнить Console.Write($"{array[0]} ");
  // в консоли выведется 0
  // метод возвращает значение типа int[] - одномерный массив целых чисел
  int[] array = new int[n];

  //Перебераем значение переменной i от 0 до количества элементов n (не включительно)
  for (int i = 0; i < n; i++)
  {
    // присваиваем i-му элементу массива случайное значение из диапозона, 
    // полученного с помощью генератора случайных чисел Random от left(включительно) 
    // до right (не включительно)
    array[i] = new Random().Next(left, right);
  }
  // после того, как в цикле массив заполнился, 
  // возвращаем массив в качестве выходного параметра
  // управление программы передается в точку вызова метода (в строку 11)
  return array;
}

// Пользовательский метод Summ принимает 2 параметра (аргумента): 
// int sign -  это знак чисел, которые мы будем суммировать 
// (-1 -отрицательные, 1 - положительные) и сам массив целых чисел int[] a 
int Summ(int sign, int[] a)
{
  int summ = 0; // Определяем и инициализируем накопительную переменную
  // Поочередно проходим по всем элементам массива
  for (int i = 0; i < a.Length; i++)
  {
    // В условии проверяется равен ли знак, переданный в качестве параметра,
    // знаку текущего элемента массива, в случае совпадения - 
    // переменная summ увеличивается на величину a[i].
    // (метод Math.Sign(a[i]) возвращает 1 для положительных и -1 для отрицательных 
    // значений a[i])
    if (sign == Math.Sign(a[i])) summ += a[i]; // эквивалентно  summ = summ + a[i];
  }
  // после выполнения рассчетов в цикле метод возвращает значение переменной 
  // summ, управление возвращается в строку вызова метода (22 и 23)
  return summ;
}

// Пользовательский метод PrintArray принимает 1 параметр (аргумент) - int[] array
// массив целых чисел. Ключевое слово void говорит о том, что метод ничего не возвращает
void PrintArray(int[] array)
{
  // Выводим на экран скобку "[" и первый элемент массива, имеющий индекс 0
  Console.Write($"[{array[0]}");
  // в цикле for  выводим на экран ", " и текущий элемент массива, a[i], начиная со 2-го
  for (int i = 1; i < array.Length; i++) Console.Write($", {array[i]}");
  // и скобку ]
  Console.Write("]");
} //метод отработал, управление передается в строку следующую за 16